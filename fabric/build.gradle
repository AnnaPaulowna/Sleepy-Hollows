plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url = "https://maven.terraformersmc.com/" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"
    modImplementation "com.github.glitchfiend:TerraBlender-fabric:${rootProject.minecraft_version}-${rootProject.terrablender_version}"

    modImplementation("team.lodestar.lodestone:lodestone:${project.minecraft_version}-${project.lodestone_fabric}-fabric")
    modImplementation("dev.emi:trinkets:3.7.1")
    modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.4.0")

    for (String module in new String[]{"base", "entity", "world"}) {
        modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-$module:5.2.2")
    }
    for (String module in new String[]{
            "accessors", "base", "blocks", "core", "data", "extensions", "lazy_registration",
            "model_generators", "models", "networking", "tool_actions"
    }) {
        modImplementation("io.github.fabricators_of_create.Porting-Lib:$module:2.3.4")
    }

    implementation(include("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.2.0"))

    modCompileOnlyApi("maven.modrinth:sodium:mc1.20.1-0.5.11")
    modCompileOnlyApi("maven.modrinth:iris:1.7.5+1.20.1")

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
